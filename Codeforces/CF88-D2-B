#include <iostream>
#include <string>
#include <vector>
#include <iomanip>
#include <set>
#include <map>
#include <numeric>
#include <bitset>
#include <sstream>
#include <iomanip>
#include <fstream>
#include <cmath>
#include <deque>
#include <algorithm>
#include <iterator>
#include <utility> 
#include <stdlib.h>  //atoi
using namespace std;
typedef long long ll;
const  double PI = 3.141592654;
#define rep(i,x) for(int(i)=0;(i)<(ll)(x);(i)++)
#define all(s)      (s).begin(),(s).end()
#define allv(v)      (v).begin(),(v).end()
#define allr(v)      (v).rbegin(),(v).rend()
#define pb          push_back
#define sz          s.size()
#define ssz          ss.size()
#define vz          v.size()
//x = atoi(s.c_str())
ll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }
void fast()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL), cout.tie(NULL);
}
int main()
{
	fast();
	int x, y, d, t;
	cin >> x >> y >> d;
	char arr[30][50];
	char h;
	vector<pair<int, int>>v;
	rep(i, x)
	{
		rep(j, y)
		{
			cin >> arr[i][j];
			if (arr[i][j] == 'S')
				v.pb({ i, j });
		}
	}
	map<char, bool>find;
	map<char, int>vis;
	rep(i, x)
	{
		rep(j, y)
		{
			if (arr[i][j] == 'S')
				continue;
			else
			{
				find[arr[i][j]] = 1;
				for (int k = 0; k < vz; k++)
				{
					int a2, b2, a1, b1;
					a1 = v[k].first, b1 = v[k].second;
					a2 = i, b2 = j;
					double dis = sqrt(pow((a1 - a2), 2.0) + pow((b1 - b2), 2.0));
					if (dis - d <= 0.0)
					{
						vis[arr[i][j]] = 1;
						break;
					}
				}
			}
		}
	}
	string s;
	cin >> t >> s;
	int c = 0;
	rep(k, t)
	{
		h = tolower(s[k]);
		if (find[h] == 0 || (isupper(s[k]) && v.size()==0))
		{
			cout << -1 << endl;
			return 0;
		}
		else if (isupper(s[k]) && !vis[h])
			c++;
	}
	cout << c << endl;
	return 0;
}
