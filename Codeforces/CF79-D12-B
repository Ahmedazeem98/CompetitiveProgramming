#include <iostream>
#include <string>
#include <vector>
#include <iomanip>
#include <set>
#include <map>
#include <numeric>
#include <bitset>
#include <sstream>
#include <iomanip>
#include <fstream>
#include <cmath>
#include <deque>
#include <algorithm>
#include <iterator>
#include <utility> 
#include <stdlib.h>  //atoi
using namespace std;
typedef long long ll;
const  double PI = 3.141592654;
#define rep(i,x) for(int(i)=0;(i)<(ll)(x);(i)++)
#define all(s)      (s).begin(),(s).end()
#define allv(v)      (v).begin(),(v).end()
#define allr(v)      (v).rbegin(),(v).rend()
#define pb          push_back
#define sz          s.size()
#define ssz          ss.size()
#define vz          v.size()
//x = atoi(s.c_str())
ll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }
void fast()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL), cout.tie(NULL);
}
int main()
{
	fast();

	int x, y, k, t, a, b, c = 0;
	cin >> x >> y >> k >> t;
	vector<int>v;
	rep(i, k)
	{
		int a, b;
		cin >> a >> b;
		a--, b--;
		v.pb(a*y + b);
	}
	sort(allv(v));
	vector < string >sol = { "Carrots", "Kiwis", "Grapes" };
	rep(j, t)
	{
		int a, b;
		cin >> a >> b;
		a--, b--;
		a = a*y + b;
		if (binary_search(allv(v), a))
		{
			cout << "Waste" << endl;
			continue;
		}
		int c = 0;
		for (int i = 0; i < vz; i++)
		{
			if (v[i] < a)
				c++;
			else
				break;
		}
		int idx = a - c;
		cout << sol[idx % 3] << endl;
	}
	return 0;
}
