#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <iomanip>
#include <set>
#include <map>
#include <numeric>
#include <bitset>
#include <sstream>
#include <iomanip>
#include <fstream>
#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <deque>
#include <algorithm>
#include <iterator>
#include <utility> 
#include <stdlib.h>  //atoi
using namespace std;
typedef long long ll;
const  double PI = 3.141592654;
#define rep(i,x) for(int(i)=0;(i)<(ll)(x);(i)++)
#define all(s)      (s).begin(),(s).end()
#define allv(v)      (v).begin(),(v).end()
#define allr(v)      (v).rbegin(),(v).rend()
#define pb          push_back
#define sz          s.size()
#define ssz          ss.size()
#define vz          v.size()
//x = atoi(s.c_str())
ll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }
void fast()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL), cout.tie(NULL);
}
int main()
{
	fast();
	int n, m, c = 0, sol = 0;
	cin >> n >> m;
	map<int, set<int>>mp;
	vector<bool>vis(n + 1);
	map<int, bool>del;
	rep(i, m)
	{
		int a, b;
		cin >> a >> b;
		mp[a].insert(b);
		mp[b].insert(a);
	}
	vector<int>v;
	vector<int>::iterator it;
	while (true)
	{
		bool test = 0;
		
		for (auto e : mp)
		{
			if (e.second.size() == 1 && !vis[e.first])
			{
				test = 1;
				v.pb(e.first);
				vis[e.first] = 1;
				del[e.first] = 1;
			}
		}
		if (v.size())
		{
			for (auto &e : mp)
			{
				if (del[e.first])
					continue;
				for (int i = 0; i < vz; i++)
				{
					if (binary_search(allv(e.second), v[i]))
					{
						e.second.erase(v[i]);
					}
				}
			}
		}
		if (test)
			c++;
		else
			break;
	}
	cout << c << endl;
	return 0;
}
